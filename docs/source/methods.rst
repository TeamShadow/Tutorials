Methods-------Another key concept to Shadow is methods. In simple terms, a method is a body of code (enclosed in ``{ }``) with a defined purpose. Methods make *source code* more readable and concise, as it breaks it up into separate “chunks.” In fact, most code is contained inside of methods.Whether you noticed it or not, we have already been doing our coding inside of a method: the ``main`` method (for more information, see a previous section, “The ``main`` Method). However, as our programs get more and more complex, writing numerous loops and doing numerous calculations all inside the ``main`` method can make the code hard to decipher, and very inefficient. Thus, we create other methods.Before we break down all the components of a method, take a look at the following program that will guide our analysis. .. code-block:: shadow    :linenos: 		import shadow:io@Console;	class Method2	{		/* Imagine you are at a restaurant with 3 other friends. 		* The service was amazing, so you want to leave a 30% tip. 		* Then, you would like to split the total dining cost 		* plus tip evenly between the four of you. 		* The following program introduces method to accomplish 		* these tasks. 		*/		public main( String[] args ) => () 		{			var mealCost = 90.56; 			var tipPercent = 30; 			var people = 4; 					var includeTip = calculateTip(mealCost, tipPercent); 					Console.printLine("The price per person is: " # pricePerPerson(mealCost + includeTip, people)); 			}			public calculateTip(double price, double percent) => (double)		{				var tip = price * (percent/100); 			return tip; 		}			public pricePerPerson(double price, int numPeople) => (double)		{			return price/numPeople; 		}	}